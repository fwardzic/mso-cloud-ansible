    - name: Set vars
      set_fact: 
        mso_info: &aws_info
          aws_access_key: "{{ aws_access_id }}"
          aws_secret_key: "{{ aws_access_key }}"
          region: "{{ aws_region }}"

    - name: Obtain default VPC information
      ec2_vpc_net_info:
        <<: *aws_info
        filters:
          "cidr": "{{ item.cidr }}"
      register: vpc
    
    - name: Obtain subnets for default VPC
      ec2_vpc_subnet_facts:
        <<: *aws_info
        filters:
          vpc-id: "{{ vpc['vpcs'][0]['vpc_id'] }}"
      register: subnet_info
    
    # Use jinja to select a random subnet from the list of subnet ids
    - set_fact:
        vpc_id: "{{ vpc['vpcs'][0]['vpc_id'] }}"
        random_subnet: "{{ subnet_info.subnets|map(attribute='id')|list|random }}"

    - name: deploy ec2 instance
      ec2:
        <<: *aws_info
        key_name: "{{ key_name }}"
        instance_type: "{{ instance_type }}"
        image: "{{ ami }}"
        wait: yes
        count: 1
        instance_tags:
          epg: "{{ item.epg_tag }}"
        vpc_subnet_id: "{{ random_subnet }}"
        assign_public_ip: yes
      register: ec2
      
    - name: Add the newly created EC2 instance(s) to the local host group
      lineinfile:
        path: ./hosts
        line: "{{ item.public_ip }} ansible_user=ec2-user ansible_ssh_private_key_file=~/.ssh/{{ key_name }}.pem ansible_ssh_extra_args='-o StrictHostKeyChecking=no'"
        insertafter: '^\[ec2-nginx\]'
      with_items: "{{ ec2.instances }}"